# Generated by Django 4.2.11 on 2024-05-18 13:26

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Doktor',
            fields=[
                ('doktor_id', models.AutoField(primary_key=True, serialize=False)),
                ('ad', models.CharField(max_length=100)),
                ('soyad', models.CharField(max_length=100)),
                ('uzmanlik_alani', models.CharField(choices=[('Dermatoloji', 'Dermatoloji'), ('Göğüs Hastalıkları', 'Göğüs Hastalıkları'), ('İç Hastalıkları', 'İç Hastalıkları'), ('Kardiyoloji', 'Kardiyoloji'), ('Nöroloji', 'Nöroloji'), ('Psikiyatri', 'Psikiyatri'), ('Genel Cerrahi', 'Genel Cerrahi'), ('Kulak Burun Boğaz', 'Kulak Burun Boğaz'), ('Kadın Hastalıkları ve Doğum', 'Kadın Hastalıkları ve Doğum'), ('Üroloji', 'Üroloji')], max_length=50)),
                ('telefon', models.CharField(default='0000000000', max_length=15, validators=[django.core.validators.RegexValidator(message="Telefon numarası formatı: '+999999999'. En fazla 15 rakam.", regex='^\\+?1?\\d{9,15}$')])),
                ('adres', models.TextField(default='N/A')),
                ('sifre', models.CharField(default='temppass', max_length=100)),
                ('calistigi_hastane', models.CharField(default='N/A', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Hasta',
            fields=[
                ('hasta_id', models.AutoField(primary_key=True, serialize=False)),
                ('ad', models.CharField(max_length=100)),
                ('soyad', models.CharField(max_length=100)),
                ('dogum_tarihi', models.DateField()),
                ('cinsiyet', models.CharField(choices=[('Erkek', 'Erkek'), ('Kadın', 'Kadın'), ('Diğer', 'Diğer')], max_length=10)),
                ('telefon', models.CharField(default='0000000000', max_length=15, validators=[django.core.validators.RegexValidator(message="Telefon numarası formatı: '+999999999'. En fazla 15 rakam.", regex='^\\+?1?\\d{9,15}$')])),
                ('adres', models.TextField(default='N/A')),
                ('sifre', models.CharField(default='temppass', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Yonetici',
            fields=[
                ('yonetici_id', models.AutoField(primary_key=True, serialize=False)),
                ('telefon', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message="Telefon numarası formatı: '+999999999'. En fazla 15 rakam.", regex='^\\+?1?\\d{9,15}$')])),
                ('sifre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Rapor',
            fields=[
                ('rapor_id', models.AutoField(primary_key=True, serialize=False)),
                ('rapor_tarihi', models.DateTimeField(default=django.utils.timezone.now)),
                ('rapor_icerigi', models.TextField()),
                ('rapor_resmi', models.ImageField(blank=True, null=True, upload_to='raporlar/')),
                ('rapor_json', models.JSONField(blank=True, null=True)),
                ('doktor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.doktor')),
                ('hasta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.hasta')),
            ],
        ),
        migrations.CreateModel(
            name='Randevu',
            fields=[
                ('randevu_id', models.AutoField(primary_key=True, serialize=False)),
                ('randevu_tarihi', models.DateField()),
                ('randevu_saati', models.TimeField()),
                ('doktor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.doktor')),
                ('hasta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.hasta')),
            ],
        ),
    ]
